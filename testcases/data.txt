Flat profile:

Each sample counts as 0.01 seconds.
 no time accumulated

  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ts/call  Ts/call  name    
  0.00      0.00     0.00      869     0.00     0.00  std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear()
  0.00      0.00     0.00      821     0.00     0.00  std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable()
  0.00      0.00     0.00      684     0.00     0.00  llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > llvm::function_ref<llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (llvm::StringRef)>::callback_fn<llvm::{lambda(llvm::StringRef)#5}>(long, llvm::StringRef)
  0.00      0.00     0.00      623     0.00     0.00  std::__detail::_Map_base<int, std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > >, std::allocator<std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&)
  0.00      0.00     0.00      429     0.00     0.00  void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign_elements<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2} const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false>*)#1}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2} const&)
  0.00      0.00     0.00      417     0.00     0.00  void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1} const&)
  0.00      0.00     0.00      385     0.00     0.00  void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign_elements<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2} const&)
  0.00      0.00     0.00      383     0.00     0.00  std::__detail::_Map_base<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](llvm::Instruction*&&)
  0.00      0.00     0.00      240     0.00     0.00  std::__detail::_Map_base<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](llvm::Instruction* const&)
  0.00      0.00     0.00      184     0.00     0.00  Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::printLine(int)
  0.00      0.00     0.00      184     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...)
  0.00      0.00     0.00      184     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
  0.00      0.00     0.00      122     0.00     0.00  Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardComponentAtInOfThisInstruction(llvm::Instruction*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&)
  0.00      0.00     0.00      118     0.00     0.00  Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardComponentAtOutOfThisInstruction(llvm::Instruction*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&)
  0.00      0.00     0.00      112     0.00     0.00  std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >&&, std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> >&&, std::integral_constant<bool, true>)
  0.00      0.00     0.00      110     0.00     0.00  Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getOut(int, llvm::BasicBlock*)
  0.00      0.00     0.00      108     0.00     0.00  std::_Hashtable<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, false>*, unsigned long)
  0.00      0.00     0.00      102     0.00     0.00  std::__detail::_Map_base<int, std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*>, std::allocator<std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&)
  0.00      0.00     0.00       76     0.00     0.00  Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardIn(int, llvm::BasicBlock*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&)
  0.00      0.00     0.00       74     0.00     0.00  Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getForwardComponentAtOutOfThisInstruction(llvm::Instruction&)
  0.00      0.00     0.00       69     0.00     0.00  std::_Hashtable<std::pair<int, llvm::BasicBlock*>, std::pair<int, llvm::BasicBlock*>, std::allocator<std::pair<int, llvm::BasicBlock*> >, std::__detail::_Identity, std::equal_to<std::pair<int, llvm::BasicBlock*> >, HashFunction, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node(unsigned long, std::pair<int, llvm::BasicBlock*> const&, unsigned long) const
  0.00      0.00     0.00       66     0.00     0.00  Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getIn(int, llvm::BasicBlock*)
  0.00      0.00     0.00       66     0.00     0.00  std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_move_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >&&, std::integral_constant<bool, true>)
  0.00      0.00     0.00       43     0.00     0.00  Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardOut(int, llvm::BasicBlock*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&)
  0.00      0.00     0.00       28     0.00     0.00  void std::deque<std::pair<int, llvm::BasicBlock*>, std::allocator<std::pair<int, llvm::BasicBlock*> > >::emplace_back<std::pair<int, llvm::BasicBlock*> >(std::pair<int, llvm::BasicBlock*>&&)
  0.00      0.00     0.00       20     0.00     0.00  std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_M_erase(std::_Rb_tree_node<llvm::BasicBlock*>*)
  0.00      0.00     0.00       19     0.00     0.00  llvm::po_iterator<llvm::BasicBlock*, llvm::SmallPtrSet<llvm::BasicBlock*, 8u>, false, llvm::GraphTraits<llvm::BasicBlock*> >::traverseChild()
  0.00      0.00     0.00       14     0.00     0.00  Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::NormalFlowFunctionForward(std::pair<int, llvm::BasicBlock*>)
  0.00      0.00     0.00       14     0.00     0.00  Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::check_if_context_already_exists(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&)
  0.00      0.00     0.00       14     0.00     0.00  std::__detail::_Map_base<std::pair<int, llvm::Instruction*>, std::pair<std::pair<int, llvm::Instruction*> const, int>, std::allocator<std::pair<std::pair<int, llvm::Instruction*> const, int> >, std::__detail::_Select1st, std::equal_to<std::pair<int, llvm::Instruction*> >, HashFunction, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::pair<int, llvm::Instruction*> const&)
  0.00      0.00     0.00       12     0.00     0.00  std::_Hashtable<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&)
  0.00      0.00     0.00       11     0.00     0.00  Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardOutflowForThisContext(int, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&)
  0.00      0.00     0.00       10     0.00     0.00  llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::SuccIterator<llvm::Instruction, llvm::BasicBlock> > >::operator=(llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::SuccIterator<llvm::Instruction, llvm::BasicBlock> > >&&)
  0.00      0.00     0.00       10     0.00     0.00  Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getForwardInflowForThisContext(int)
  0.00      0.00     0.00       10     0.00     0.00  std::_Hashtable<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable()
  0.00      0.00     0.00        6     0.00     0.00  std::_Rb_tree_iterator<std::pair<llvm::Instruction* const, bool> > std::_Rb_tree<llvm::Instruction*, std::pair<llvm::Instruction* const, bool>, std::_Select1st<std::pair<llvm::Instruction* const, bool> >, std::less<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<llvm::Instruction* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<llvm::Instruction* const, bool> >, std::piecewise_construct_t const&, std::tuple<llvm::Instruction* const&>&&, std::tuple<>&&)
  0.00      0.00     0.00        6     0.00     0.00  std::_Rb_tree<llvm::Instruction*, std::pair<llvm::Instruction* const, bool>, std::_Select1st<std::pair<llvm::Instruction* const, bool> >, std::less<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, bool> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<llvm::Instruction* const, bool> >, llvm::Instruction* const&)
  0.00      0.00     0.00        5     0.00     0.00  process_mem_usage(float&, float&)
  0.00      0.00     0.00        5     0.00     0.00  llvm::iterator_range<llvm::po_iterator<llvm::BasicBlock*, llvm::SmallPtrSet<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef, 8u>, false, llvm::GraphTraits<llvm::BasicBlock*> > > llvm::post_order<llvm::BasicBlock*>(llvm::BasicBlock* const&)
  0.00      0.00     0.00        5     0.00     0.00  llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::SuccIterator<llvm::Instruction, llvm::BasicBlock> > >::operator=(llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::SuccIterator<llvm::Instruction, llvm::BasicBlock> > > const&)
  0.00      0.00     0.00        5     0.00     0.00  Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::INIT_CONTEXT(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, llvm::CallInst*)
  0.00      0.00     0.00        5     0.00     0.00  Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward()
  0.00      0.00     0.00        5     0.00     0.00  Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardInflowForThisContext(int, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&)
  0.00      0.00     0.00        5     0.00     0.00  std::pair<std::_Rb_tree_iterator<llvm::BasicBlock*>, bool> std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_M_insert_unique<llvm::BasicBlock* const&>(llvm::BasicBlock* const&)
  0.00      0.00     0.00        4     0.00     0.00  llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::PredIterator<llvm::BasicBlock, llvm::Value::user_iterator_impl<llvm::User> > > >::operator=(llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::PredIterator<llvm::BasicBlock, llvm::Value::user_iterator_impl<llvm::User> > > >&&)
  0.00      0.00     0.00        4     0.00     0.00  llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::PredIterator<llvm::BasicBlock, llvm::Value::user_iterator_impl<llvm::User> > > >::operator=(llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::PredIterator<llvm::BasicBlock, llvm::Value::user_iterator_impl<llvm::User> > > > const&)
  0.00      0.00     0.00        4     0.00     0.00  std::_Rb_tree_node<llvm::BasicBlock*>* std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_M_copy<std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_Alloc_node>(std::_Rb_tree_node<llvm::BasicBlock*> const*, std::_Rb_tree_node_base*, std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_Alloc_node&)
  0.00      0.00     0.00        4     0.00     0.00  std::__detail::_Map_base<llvm::CallInst*, std::pair<llvm::CallInst* const, int>, std::allocator<std::pair<llvm::CallInst* const, int> >, std::__detail::_Select1st, std::equal_to<llvm::CallInst*>, std::hash<llvm::CallInst*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](llvm::CallInst* const&)
  0.00      0.00     0.00        2     0.00     0.00  llvm::iterator_range<llvm::ipo_iterator<llvm::BasicBlock*, std::set<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef, std::less<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef>, std::allocator<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef> >, false> > llvm::inverse_post_order<llvm::BasicBlock*>(llvm::BasicBlock* const&)
  0.00      0.00     0.00        2     0.00     0.00  Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::performSplittingBB(llvm::Function&)
  0.00      0.00     0.00        2     0.00     0.00  std::_Hashtable<std::pair<int, llvm::BasicBlock*>, std::pair<int, llvm::BasicBlock*>, std::allocator<std::pair<int, llvm::BasicBlock*> >, std::__detail::_Identity, std::equal_to<std::pair<int, llvm::BasicBlock*> >, HashFunction, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable()
  0.00      0.00     0.00        2     0.00     0.00  std::_Hashtable<int, std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > >, std::allocator<std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&)
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_base<std::pair<int, llvm::BasicBlock*>, std::allocator<std::pair<int, llvm::BasicBlock*> > >::~_Deque_base()
  0.00      0.00     0.00        2     0.00     0.00  std::_Rb_tree<llvm::Instruction*, std::pair<llvm::Instruction* const, bool>, std::_Select1st<std::pair<llvm::Instruction* const, bool> >, std::less<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, bool> > >::_M_get_insert_unique_pos(llvm::Instruction* const&)
  0.00      0.00     0.00        2     0.00     0.00  std::_Rb_tree<llvm::Instruction*, std::pair<llvm::Instruction* const, bool>, std::_Select1st<std::pair<llvm::Instruction* const, bool> >, std::less<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, bool> > >::_M_erase(std::_Rb_tree_node<std::pair<llvm::Instruction* const, bool> >*)
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z17process_mem_usageRfS_
  0.00      0.00     0.00        1     0.00     0.00  printMemory(float)
  0.00      0.00     0.00        1     0.00     0.00  std::_Hashtable<llvm::CallInst*, std::pair<llvm::CallInst* const, int>, std::allocator<std::pair<llvm::CallInst* const, int> >, std::__detail::_Select1st, std::equal_to<llvm::CallInst*>, std::hash<llvm::CallInst*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&)
  0.00      0.00     0.00        1     0.00     0.00  std::_Hashtable<std::pair<int, llvm::BasicBlock*>, std::pair<int, llvm::BasicBlock*>, std::allocator<std::pair<int, llvm::BasicBlock*> >, std::__detail::_Identity, std::equal_to<std::pair<int, llvm::BasicBlock*> >, HashFunction, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&)
  0.00      0.00     0.00        1     0.00     0.00  std::_Hashtable<std::pair<int, llvm::Instruction*>, std::pair<std::pair<int, llvm::Instruction*> const, int>, std::allocator<std::pair<std::pair<int, llvm::Instruction*> const, int> >, std::__detail::_Select1st, std::equal_to<std::pair<int, llvm::Instruction*> >, HashFunction, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash(unsigned long, unsigned long const&)
  0.00      0.00     0.00        1     0.00     0.00  std::_Hashtable<int, std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*>, std::allocator<std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&)
  0.00      0.00     0.00        1     0.00     0.00  std::_Hashtable<int, std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > >, std::allocator<std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable()
  0.00      0.00     0.00        1     0.00     0.00  std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) no time propagated

index % time    self  children    called     name
                0.00    0.00     869/869         std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [142]
[141]    0.0    0.00    0.00     869         std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [141]
-----------------------------------------------
                0.00    0.00       5/821         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardInflowForThisContext(int, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [183]
                0.00    0.00       5/821         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysis(llvm::Module&) [8925]
                0.00    0.00      10/821         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getForwardInflowForThisContext(int) [174]
                0.00    0.00      11/821         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardOutflowForThisContext(int, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [172]
                0.00    0.00      26/821         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::INIT_CONTEXT(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, llvm::CallInst*) [181]
                0.00    0.00      66/821         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::check_if_context_already_exists(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&) [169]
                0.00    0.00     102/821         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::NormalFlowFunctionForward(std::pair<int, llvm::BasicBlock*>) [168]
                0.00    0.00     108/821         std::_Hashtable<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [175]
                0.00    0.00     488/821         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [182]
[142]    0.0    0.00    0.00     821         std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [142]
                0.00    0.00     869/869         std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [141]
-----------------------------------------------
                0.00    0.00       1/684         std::_Hashtable<int, std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*>, std::allocator<std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [201]
                0.00    0.00       1/684         std::_Hashtable<llvm::CallInst*, std::pair<llvm::CallInst* const, int>, std::allocator<std::pair<llvm::CallInst* const, int> >, std::__detail::_Select1st, std::equal_to<llvm::CallInst*>, std::hash<llvm::CallInst*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [198]
                0.00    0.00       1/684         std::_Hashtable<std::pair<int, llvm::Instruction*>, std::pair<std::pair<int, llvm::Instruction*> const, int>, std::allocator<std::pair<std::pair<int, llvm::Instruction*> const, int> >, std::__detail::_Select1st, std::equal_to<std::pair<int, llvm::Instruction*> >, HashFunction, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash(unsigned long, unsigned long const&) [200]
                0.00    0.00       1/684         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&) [203]
                0.00    0.00       1/684         std::_Hashtable<std::pair<int, llvm::BasicBlock*>, std::pair<int, llvm::BasicBlock*>, std::allocator<std::pair<int, llvm::BasicBlock*> >, std::__detail::_Identity, std::equal_to<std::pair<int, llvm::BasicBlock*> >, HashFunction, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) [199]
                0.00    0.00       1/684         llvm::LLParser::Run(bool, llvm::function_ref<llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (llvm::StringRef)>) [8353]
                0.00    0.00       2/684         std::_Hashtable<int, std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > >, std::allocator<std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [192]
                0.00    0.00       3/684         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::performSplittingBB(llvm::Function&) [190]
                0.00    0.00      12/684         std::_Hashtable<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [171]
                0.00    0.00      28/684         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [182]
                0.00    0.00     162/684         void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign_elements<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2} const&) [147]
                0.00    0.00     471/684         void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1} const&) [146]
[143]    0.0    0.00    0.00     684         llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > llvm::function_ref<llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (llvm::StringRef)>::callback_fn<llvm::{lambda(llvm::StringRef)#5}>(long, llvm::StringRef) [143]
-----------------------------------------------
                0.00    0.00      14/623         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [182]
                0.00    0.00      43/623         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardOut(int, llvm::BasicBlock*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [164]
                0.00    0.00      66/623         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getIn(int, llvm::BasicBlock*) [162]
                0.00    0.00      74/623         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getForwardComponentAtOutOfThisInstruction(llvm::Instruction&) [160]
                0.00    0.00      76/623         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardIn(int, llvm::BasicBlock*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [159]
                0.00    0.00     110/623         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getOut(int, llvm::BasicBlock*) [156]
                0.00    0.00     118/623         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardComponentAtOutOfThisInstruction(llvm::Instruction*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [154]
                0.00    0.00     122/623         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardComponentAtInOfThisInstruction(llvm::Instruction*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [153]
[144]    0.0    0.00    0.00     623         std::__detail::_Map_base<int, std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > >, std::allocator<std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [144]
                0.00    0.00       2/2           std::_Hashtable<int, std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > >, std::allocator<std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [192]
-----------------------------------------------
                0.00    0.00     429/429         void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign_elements<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2} const&) [147]
[145]    0.0    0.00    0.00     429         void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign_elements<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2} const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false>*)#1}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2} const&) [145]
-----------------------------------------------
                0.00    0.00       2/417         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysis(llvm::Module&) [8925]
                0.00    0.00       5/417         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardInflowForThisContext(int, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [183]
                0.00    0.00      10/417         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getForwardInflowForThisContext(int) [174]
                0.00    0.00      11/417         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardOutflowForThisContext(int, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [172]
                0.00    0.00      15/417         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::INIT_CONTEXT(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, llvm::CallInst*) [181]
                0.00    0.00      44/417         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::check_if_context_already_exists(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&) [169]
                0.00    0.00      66/417         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getIn(int, llvm::BasicBlock*) [162]
                0.00    0.00      74/417         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getForwardComponentAtOutOfThisInstruction(llvm::Instruction&) [160]
                0.00    0.00      80/417         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [182]
                0.00    0.00     110/417         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getOut(int, llvm::BasicBlock*) [156]
[146]    0.0    0.00    0.00     417         void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1} const&) [146]
                0.00    0.00     471/684         llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > llvm::function_ref<llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (llvm::StringRef)>::callback_fn<llvm::{lambda(llvm::StringRef)#5}>(long, llvm::StringRef) [143]
-----------------------------------------------
                0.00    0.00       5/385         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardInflowForThisContext(int, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [183]
                0.00    0.00      10/385         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::INIT_CONTEXT(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, llvm::CallInst*) [181]
                0.00    0.00      11/385         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardOutflowForThisContext(int, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [172]
                0.00    0.00      43/385         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardOut(int, llvm::BasicBlock*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [164]
                0.00    0.00      76/385         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardIn(int, llvm::BasicBlock*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [159]
                0.00    0.00     118/385         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardComponentAtOutOfThisInstruction(llvm::Instruction*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [154]
                0.00    0.00     122/385         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardComponentAtInOfThisInstruction(llvm::Instruction*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [153]
[147]    0.0    0.00    0.00     385         void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign_elements<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2} const&) [147]
                0.00    0.00     429/429         void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign_elements<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2} const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false>*)#1}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2} const&) [145]
                0.00    0.00     162/684         llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > llvm::function_ref<llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (llvm::StringRef)>::callback_fn<llvm::{lambda(llvm::StringRef)#5}>(long, llvm::StringRef) [143]
-----------------------------------------------
                0.00    0.00      14/383         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [182]
                0.00    0.00      43/383         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardOut(int, llvm::BasicBlock*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [164]
                0.00    0.00      66/383         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getIn(int, llvm::BasicBlock*) [162]
                0.00    0.00      74/383         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getForwardComponentAtOutOfThisInstruction(llvm::Instruction&) [160]
                0.00    0.00      76/383         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardIn(int, llvm::BasicBlock*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [159]
                0.00    0.00     110/383         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getOut(int, llvm::BasicBlock*) [156]
[148]    0.0    0.00    0.00     383         std::__detail::_Map_base<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](llvm::Instruction*&&) [148]
                0.00    0.00      38/108         std::_Hashtable<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, false>*, unsigned long) [157]
-----------------------------------------------
                0.00    0.00     118/240         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardComponentAtOutOfThisInstruction(llvm::Instruction*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [154]
                0.00    0.00     122/240         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardComponentAtInOfThisInstruction(llvm::Instruction*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [153]
[149]    0.0    0.00    0.00     240         std::__detail::_Map_base<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](llvm::Instruction* const&) [149]
                0.00    0.00      70/108         std::_Hashtable<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, false>*, unsigned long) [157]
-----------------------------------------------
                0.00    0.00      88/184         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::NormalFlowFunctionForward(std::pair<int, llvm::BasicBlock*>) [168]
                0.00    0.00      96/184         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [182]
[150]    0.0    0.00    0.00     184         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::printLine(int) [150]
                0.00    0.00     184/184         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [152]
                0.00    0.00     184/184         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...) [151]
-----------------------------------------------
                0.00    0.00     184/184         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::printLine(int) [150]
[151]    0.0    0.00    0.00     184         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...) [151]
-----------------------------------------------
                0.00    0.00     184/184         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::printLine(int) [150]
[152]    0.0    0.00    0.00     184         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [152]
-----------------------------------------------
                0.00    0.00      24/122         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [182]
                0.00    0.00      44/122         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::NormalFlowFunctionForward(std::pair<int, llvm::BasicBlock*>) [168]
                0.00    0.00      54/122         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::INIT_CONTEXT(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, llvm::CallInst*) [181]
[153]    0.0    0.00    0.00     122         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardComponentAtInOfThisInstruction(llvm::Instruction*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [153]
                0.00    0.00     122/623         std::__detail::_Map_base<int, std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > >, std::allocator<std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [144]
                0.00    0.00     122/240         std::__detail::_Map_base<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](llvm::Instruction* const&) [149]
                0.00    0.00     122/385         void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign_elements<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2} const&) [147]
-----------------------------------------------
                0.00    0.00      20/118         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [182]
                0.00    0.00      44/118         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::NormalFlowFunctionForward(std::pair<int, llvm::BasicBlock*>) [168]
                0.00    0.00      54/118         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::INIT_CONTEXT(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, llvm::CallInst*) [181]
[154]    0.0    0.00    0.00     118         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardComponentAtOutOfThisInstruction(llvm::Instruction*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [154]
                0.00    0.00     118/623         std::__detail::_Map_base<int, std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > >, std::allocator<std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [144]
                0.00    0.00     118/240         std::__detail::_Map_base<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](llvm::Instruction* const&) [149]
                0.00    0.00     118/385         void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign_elements<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2} const&) [147]
-----------------------------------------------
                0.00    0.00      10/112         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getForwardInflowForThisContext(int) [174]
                0.00    0.00      14/112         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::NormalFlowFunctionForward(std::pair<int, llvm::BasicBlock*>) [168]
                0.00    0.00      22/112         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::check_if_context_already_exists(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&) [169]
                0.00    0.00      66/112         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [182]
[155]    0.0    0.00    0.00     112         std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >&&, std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> >&&, std::integral_constant<bool, true>) [155]
-----------------------------------------------
                0.00    0.00     110/110         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [182]
[156]    0.0    0.00    0.00     110         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getOut(int, llvm::BasicBlock*) [156]
                0.00    0.00     110/623         std::__detail::_Map_base<int, std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > >, std::allocator<std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [144]
                0.00    0.00     110/383         std::__detail::_Map_base<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](llvm::Instruction*&&) [148]
                0.00    0.00     110/417         void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1} const&) [146]
-----------------------------------------------
                0.00    0.00      38/108         std::__detail::_Map_base<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](llvm::Instruction*&&) [148]
                0.00    0.00      70/108         std::__detail::_Map_base<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](llvm::Instruction* const&) [149]
[157]    0.0    0.00    0.00     108         std::_Hashtable<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, false>*, unsigned long) [157]
                0.00    0.00      12/12          std::_Hashtable<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [171]
-----------------------------------------------
                0.00    0.00       5/102         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardInflowForThisContext(int, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [183]
                0.00    0.00       6/102         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::INIT_CONTEXT(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, llvm::CallInst*) [181]
                0.00    0.00      10/102         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getForwardInflowForThisContext(int) [174]
                0.00    0.00      11/102         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardOutflowForThisContext(int, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [172]
                0.00    0.00      22/102         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::check_if_context_already_exists(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&) [169]
                0.00    0.00      48/102         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [182]
[158]    0.0    0.00    0.00     102         std::__detail::_Map_base<int, std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*>, std::allocator<std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [158]
                0.00    0.00       1/1           std::_Hashtable<int, std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*>, std::allocator<std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [201]
-----------------------------------------------
                0.00    0.00      24/76          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::INIT_CONTEXT(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, llvm::CallInst*) [181]
                0.00    0.00      52/76          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [182]
[159]    0.0    0.00    0.00      76         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardIn(int, llvm::BasicBlock*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [159]
                0.00    0.00      76/623         std::__detail::_Map_base<int, std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > >, std::allocator<std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [144]
                0.00    0.00      76/383         std::__detail::_Map_base<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](llvm::Instruction*&&) [148]
                0.00    0.00      76/385         void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign_elements<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2} const&) [147]
-----------------------------------------------
                0.00    0.00      30/74          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [182]
                0.00    0.00      44/74          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::NormalFlowFunctionForward(std::pair<int, llvm::BasicBlock*>) [168]
[160]    0.0    0.00    0.00      74         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getForwardComponentAtOutOfThisInstruction(llvm::Instruction&) [160]
                0.00    0.00      74/383         std::__detail::_Map_base<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](llvm::Instruction*&&) [148]
                0.00    0.00      74/623         std::__detail::_Map_base<int, std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > >, std::allocator<std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [144]
                0.00    0.00      74/417         void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1} const&) [146]
-----------------------------------------------
                0.00    0.00      19/69          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::INIT_CONTEXT(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, llvm::CallInst*) [181]
                0.00    0.00      50/69          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [182]
[161]    0.0    0.00    0.00      69         std::_Hashtable<std::pair<int, llvm::BasicBlock*>, std::pair<int, llvm::BasicBlock*>, std::allocator<std::pair<int, llvm::BasicBlock*> >, std::__detail::_Identity, std::equal_to<std::pair<int, llvm::BasicBlock*> >, HashFunction, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node(unsigned long, std::pair<int, llvm::BasicBlock*> const&, unsigned long) const [161]
-----------------------------------------------
                0.00    0.00      14/66          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::NormalFlowFunctionForward(std::pair<int, llvm::BasicBlock*>) [168]
                0.00    0.00      52/66          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [182]
[162]    0.0    0.00    0.00      66         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getIn(int, llvm::BasicBlock*) [162]
                0.00    0.00      66/623         std::__detail::_Map_base<int, std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > >, std::allocator<std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [144]
                0.00    0.00      66/383         std::__detail::_Map_base<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](llvm::Instruction*&&) [148]
                0.00    0.00      66/417         void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1} const&) [146]
-----------------------------------------------
                0.00    0.00       1/66          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::INIT_CONTEXT(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, llvm::CallInst*) [181]
                0.00    0.00       1/66          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysis(llvm::Module&) [8925]
                0.00    0.00      20/66          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [182]
                0.00    0.00      44/66          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::NormalFlowFunctionForward(std::pair<int, llvm::BasicBlock*>) [168]
[163]    0.0    0.00    0.00      66         std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_move_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >&&, std::integral_constant<bool, true>) [163]
-----------------------------------------------
                0.00    0.00      19/43          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::INIT_CONTEXT(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, llvm::CallInst*) [181]
                0.00    0.00      24/43          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [182]
[164]    0.0    0.00    0.00      43         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardOut(int, llvm::BasicBlock*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [164]
                0.00    0.00      43/623         std::__detail::_Map_base<int, std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > >, std::allocator<std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [144]
                0.00    0.00      43/383         std::__detail::_Map_base<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](llvm::Instruction*&&) [148]
                0.00    0.00      43/385         void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign_elements<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2} const&) [147]
-----------------------------------------------
                0.00    0.00       9/28          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [182]
                0.00    0.00      19/28          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::INIT_CONTEXT(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, llvm::CallInst*) [181]
[165]    0.0    0.00    0.00      28         void std::deque<std::pair<int, llvm::BasicBlock*>, std::allocator<std::pair<int, llvm::BasicBlock*> > >::emplace_back<std::pair<int, llvm::BasicBlock*> >(std::pair<int, llvm::BasicBlock*>&&) [165]
-----------------------------------------------
                                  12             std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_M_erase(std::_Rb_tree_node<llvm::BasicBlock*>*) [166]
                0.00    0.00       8/20          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::performSplittingBB(llvm::Function&) [190]
                0.00    0.00      12/20          llvm::iterator_range<llvm::ipo_iterator<llvm::BasicBlock*, std::set<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef, std::less<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef>, std::allocator<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef> >, false> > llvm::inverse_post_order<llvm::BasicBlock*>(llvm::BasicBlock* const&) [189]
[166]    0.0    0.00    0.00      20+12      std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_M_erase(std::_Rb_tree_node<llvm::BasicBlock*>*) [166]
                                  12             std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_M_erase(std::_Rb_tree_node<llvm::BasicBlock*>*) [166]
-----------------------------------------------
                0.00    0.00       5/19          llvm::iterator_range<llvm::po_iterator<llvm::BasicBlock*, llvm::SmallPtrSet<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef, 8u>, false, llvm::GraphTraits<llvm::BasicBlock*> > > llvm::post_order<llvm::BasicBlock*>(llvm::BasicBlock* const&) [179]
                0.00    0.00      14/19          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::INIT_CONTEXT(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, llvm::CallInst*) [181]
[167]    0.0    0.00    0.00      19         llvm::po_iterator<llvm::BasicBlock*, llvm::SmallPtrSet<llvm::BasicBlock*, 8u>, false, llvm::GraphTraits<llvm::BasicBlock*> >::traverseChild() [167]
-----------------------------------------------
                0.00    0.00      14/14          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [182]
[168]    0.0    0.00    0.00      14         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::NormalFlowFunctionForward(std::pair<int, llvm::BasicBlock*>) [168]
                0.00    0.00     102/821         std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [142]
                0.00    0.00      88/184         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::printLine(int) [150]
                0.00    0.00      44/122         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardComponentAtInOfThisInstruction(llvm::Instruction*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [153]
                0.00    0.00      44/118         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardComponentAtOutOfThisInstruction(llvm::Instruction*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [154]
                0.00    0.00      44/74          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getForwardComponentAtOutOfThisInstruction(llvm::Instruction&) [160]
                0.00    0.00      44/66          std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_move_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >&&, std::integral_constant<bool, true>) [163]
                0.00    0.00      14/66          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getIn(int, llvm::BasicBlock*) [162]
                0.00    0.00      14/112         std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >&&, std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> >&&, std::integral_constant<bool, true>) [155]
-----------------------------------------------
                0.00    0.00      14/14          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [182]
[169]    0.0    0.00    0.00      14         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::check_if_context_already_exists(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&) [169]
                0.00    0.00      66/821         std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [142]
                0.00    0.00      44/417         void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1} const&) [146]
                0.00    0.00      22/102         std::__detail::_Map_base<int, std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*>, std::allocator<std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [158]
                0.00    0.00      22/112         std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >&&, std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> >&&, std::integral_constant<bool, true>) [155]
-----------------------------------------------
                0.00    0.00      14/14          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [182]
[170]    0.0    0.00    0.00      14         std::__detail::_Map_base<std::pair<int, llvm::Instruction*>, std::pair<std::pair<int, llvm::Instruction*> const, int>, std::allocator<std::pair<std::pair<int, llvm::Instruction*> const, int> >, std::__detail::_Select1st, std::equal_to<std::pair<int, llvm::Instruction*> >, HashFunction, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::pair<int, llvm::Instruction*> const&) [170]
                0.00    0.00       1/1           std::_Hashtable<std::pair<int, llvm::Instruction*>, std::pair<std::pair<int, llvm::Instruction*> const, int>, std::allocator<std::pair<std::pair<int, llvm::Instruction*> const, int> >, std::__detail::_Select1st, std::equal_to<std::pair<int, llvm::Instruction*> >, HashFunction, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash(unsigned long, unsigned long const&) [200]
-----------------------------------------------
                0.00    0.00      12/12          std::_Hashtable<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, false>*, unsigned long) [157]
[171]    0.0    0.00    0.00      12         std::_Hashtable<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [171]
                0.00    0.00      12/684         llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > llvm::function_ref<llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (llvm::StringRef)>::callback_fn<llvm::{lambda(llvm::StringRef)#5}>(long, llvm::StringRef) [143]
-----------------------------------------------
                0.00    0.00       5/11          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::INIT_CONTEXT(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, llvm::CallInst*) [181]
                0.00    0.00       6/11          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [182]
[172]    0.0    0.00    0.00      11         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardOutflowForThisContext(int, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [172]
                0.00    0.00      11/102         std::__detail::_Map_base<int, std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*>, std::allocator<std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [158]
                0.00    0.00      11/417         void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1} const&) [146]
                0.00    0.00      11/821         std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [142]
                0.00    0.00      11/385         void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign_elements<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2} const&) [147]
-----------------------------------------------
                0.00    0.00      10/10          llvm::iterator_range<llvm::po_iterator<llvm::BasicBlock*, llvm::SmallPtrSet<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef, 8u>, false, llvm::GraphTraits<llvm::BasicBlock*> > > llvm::post_order<llvm::BasicBlock*>(llvm::BasicBlock* const&) [179]
[173]    0.0    0.00    0.00      10         llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::SuccIterator<llvm::Instruction, llvm::BasicBlock> > >::operator=(llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::SuccIterator<llvm::Instruction, llvm::BasicBlock> > >&&) [173]
-----------------------------------------------
                0.00    0.00       5/10          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::INIT_CONTEXT(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, llvm::CallInst*) [181]
                0.00    0.00       5/10          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [182]
[174]    0.0    0.00    0.00      10         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getForwardInflowForThisContext(int) [174]
                0.00    0.00      10/102         std::__detail::_Map_base<int, std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*>, std::allocator<std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [158]
                0.00    0.00      10/417         void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1} const&) [146]
                0.00    0.00      10/821         std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [142]
                0.00    0.00      10/112         std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >&&, std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> >&&, std::integral_constant<bool, true>) [155]
-----------------------------------------------
                0.00    0.00      10/10          std::_Hashtable<int, std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > >, std::allocator<std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [202]
[175]    0.0    0.00    0.00      10         std::_Hashtable<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [175]
                0.00    0.00     108/821         std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [142]
-----------------------------------------------
                0.00    0.00       6/6           Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::performSplittingBB(llvm::Function&) [190]
[176]    0.0    0.00    0.00       6         std::_Rb_tree_iterator<std::pair<llvm::Instruction* const, bool> > std::_Rb_tree<llvm::Instruction*, std::pair<llvm::Instruction* const, bool>, std::_Select1st<std::pair<llvm::Instruction* const, bool> >, std::less<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<llvm::Instruction* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<llvm::Instruction* const, bool> >, std::piecewise_construct_t const&, std::tuple<llvm::Instruction* const&>&&, std::tuple<>&&) [176]
                0.00    0.00       6/6           std::_Rb_tree<llvm::Instruction*, std::pair<llvm::Instruction* const, bool>, std::_Select1st<std::pair<llvm::Instruction* const, bool> >, std::less<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, bool> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<llvm::Instruction* const, bool> >, llvm::Instruction* const&) [177]
                0.00    0.00       2/2           std::_Rb_tree<llvm::Instruction*, std::pair<llvm::Instruction* const, bool>, std::_Select1st<std::pair<llvm::Instruction* const, bool> >, std::less<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, bool> > >::_M_get_insert_unique_pos(llvm::Instruction* const&) [194]
-----------------------------------------------
                0.00    0.00       6/6           std::_Rb_tree_iterator<std::pair<llvm::Instruction* const, bool> > std::_Rb_tree<llvm::Instruction*, std::pair<llvm::Instruction* const, bool>, std::_Select1st<std::pair<llvm::Instruction* const, bool> >, std::less<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<llvm::Instruction* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<llvm::Instruction* const, bool> >, std::piecewise_construct_t const&, std::tuple<llvm::Instruction* const&>&&, std::tuple<>&&) [176]
[177]    0.0    0.00    0.00       6         std::_Rb_tree<llvm::Instruction*, std::pair<llvm::Instruction* const, bool>, std::_Select1st<std::pair<llvm::Instruction* const, bool> >, std::less<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, bool> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<llvm::Instruction* const, bool> >, llvm::Instruction* const&) [177]
-----------------------------------------------
                0.00    0.00       5/5           Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::INIT_CONTEXT(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, llvm::CallInst*) [181]
[178]    0.0    0.00    0.00       5         process_mem_usage(float&, float&) [178]
-----------------------------------------------
                0.00    0.00       5/5           Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::INIT_CONTEXT(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, llvm::CallInst*) [181]
[179]    0.0    0.00    0.00       5         llvm::iterator_range<llvm::po_iterator<llvm::BasicBlock*, llvm::SmallPtrSet<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef, 8u>, false, llvm::GraphTraits<llvm::BasicBlock*> > > llvm::post_order<llvm::BasicBlock*>(llvm::BasicBlock* const&) [179]
                0.00    0.00      10/10          llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::SuccIterator<llvm::Instruction, llvm::BasicBlock> > >::operator=(llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::SuccIterator<llvm::Instruction, llvm::BasicBlock> > >&&) [173]
                0.00    0.00       5/19          llvm::po_iterator<llvm::BasicBlock*, llvm::SmallPtrSet<llvm::BasicBlock*, 8u>, false, llvm::GraphTraits<llvm::BasicBlock*> >::traverseChild() [167]
-----------------------------------------------
                0.00    0.00       5/5           Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::INIT_CONTEXT(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, llvm::CallInst*) [181]
[180]    0.0    0.00    0.00       5         llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::SuccIterator<llvm::Instruction, llvm::BasicBlock> > >::operator=(llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::SuccIterator<llvm::Instruction, llvm::BasicBlock> > > const&) [180]
-----------------------------------------------
                0.00    0.00       1/5           Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysis(llvm::Module&) [8925]
                0.00    0.00       4/5           Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [182]
[181]    0.0    0.00    0.00       5         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::INIT_CONTEXT(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, llvm::CallInst*) [181]
                0.00    0.00      54/122         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardComponentAtInOfThisInstruction(llvm::Instruction*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [153]
                0.00    0.00      54/118         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardComponentAtOutOfThisInstruction(llvm::Instruction*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [154]
                0.00    0.00      26/821         std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [142]
                0.00    0.00      24/76          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardIn(int, llvm::BasicBlock*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [159]
                0.00    0.00      19/69          std::_Hashtable<std::pair<int, llvm::BasicBlock*>, std::pair<int, llvm::BasicBlock*>, std::allocator<std::pair<int, llvm::BasicBlock*> >, std::__detail::_Identity, std::equal_to<std::pair<int, llvm::BasicBlock*> >, HashFunction, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node(unsigned long, std::pair<int, llvm::BasicBlock*> const&, unsigned long) const [161]
                0.00    0.00      19/43          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardOut(int, llvm::BasicBlock*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [164]
                0.00    0.00      19/28          void std::deque<std::pair<int, llvm::BasicBlock*>, std::allocator<std::pair<int, llvm::BasicBlock*> > >::emplace_back<std::pair<int, llvm::BasicBlock*> >(std::pair<int, llvm::BasicBlock*>&&) [165]
                0.00    0.00      15/417         void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1} const&) [146]
                0.00    0.00      14/19          llvm::po_iterator<llvm::BasicBlock*, llvm::SmallPtrSet<llvm::BasicBlock*, 8u>, false, llvm::GraphTraits<llvm::BasicBlock*> >::traverseChild() [167]
                0.00    0.00      10/385         void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign_elements<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2} const&) [147]
                0.00    0.00       6/102         std::__detail::_Map_base<int, std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*>, std::allocator<std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [158]
                0.00    0.00       5/11          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardOutflowForThisContext(int, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [172]
                0.00    0.00       5/5           llvm::iterator_range<llvm::po_iterator<llvm::BasicBlock*, llvm::SmallPtrSet<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef, 8u>, false, llvm::GraphTraits<llvm::BasicBlock*> > > llvm::post_order<llvm::BasicBlock*>(llvm::BasicBlock* const&) [179]
                0.00    0.00       5/5           Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardInflowForThisContext(int, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [183]
                0.00    0.00       5/10          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getForwardInflowForThisContext(int) [174]
                0.00    0.00       5/5           process_mem_usage(float&, float&) [178]
                0.00    0.00       5/5           llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::SuccIterator<llvm::Instruction, llvm::BasicBlock> > >::operator=(llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::SuccIterator<llvm::Instruction, llvm::BasicBlock> > > const&) [180]
                0.00    0.00       4/4           std::__detail::_Map_base<llvm::CallInst*, std::pair<llvm::CallInst* const, int>, std::allocator<std::pair<llvm::CallInst* const, int> >, std::__detail::_Select1st, std::equal_to<llvm::CallInst*>, std::hash<llvm::CallInst*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](llvm::CallInst* const&) [188]
                0.00    0.00       1/66          std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_move_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >&&, std::integral_constant<bool, true>) [163]
                0.00    0.00       1/1           std::_Hashtable<std::pair<int, llvm::BasicBlock*>, std::pair<int, llvm::BasicBlock*>, std::allocator<std::pair<int, llvm::BasicBlock*> >, std::__detail::_Identity, std::equal_to<std::pair<int, llvm::BasicBlock*> >, HashFunction, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) [199]
                0.00    0.00       1/1           std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&) [203]
-----------------------------------------------
                0.00    0.00       5/5           Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysis(llvm::Module&) [8925]
[182]    0.0    0.00    0.00       5         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [182]
                0.00    0.00     488/821         std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [142]
                0.00    0.00     110/110         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getOut(int, llvm::BasicBlock*) [156]
                0.00    0.00      96/184         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::printLine(int) [150]
                0.00    0.00      80/417         void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1} const&) [146]
                0.00    0.00      66/112         std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >&&, std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> >&&, std::integral_constant<bool, true>) [155]
                0.00    0.00      52/76          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardIn(int, llvm::BasicBlock*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [159]
                0.00    0.00      52/66          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getIn(int, llvm::BasicBlock*) [162]
                0.00    0.00      50/69          std::_Hashtable<std::pair<int, llvm::BasicBlock*>, std::pair<int, llvm::BasicBlock*>, std::allocator<std::pair<int, llvm::BasicBlock*> >, std::__detail::_Identity, std::equal_to<std::pair<int, llvm::BasicBlock*> >, HashFunction, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node(unsigned long, std::pair<int, llvm::BasicBlock*> const&, unsigned long) const [161]
                0.00    0.00      48/102         std::__detail::_Map_base<int, std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*>, std::allocator<std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [158]
                0.00    0.00      30/74          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getForwardComponentAtOutOfThisInstruction(llvm::Instruction&) [160]
                0.00    0.00      28/684         llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > llvm::function_ref<llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (llvm::StringRef)>::callback_fn<llvm::{lambda(llvm::StringRef)#5}>(long, llvm::StringRef) [143]
                0.00    0.00      24/122         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardComponentAtInOfThisInstruction(llvm::Instruction*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [153]
                0.00    0.00      24/43          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardOut(int, llvm::BasicBlock*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [164]
                0.00    0.00      20/118         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardComponentAtOutOfThisInstruction(llvm::Instruction*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [154]
                0.00    0.00      20/66          std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_move_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >&&, std::integral_constant<bool, true>) [163]
                0.00    0.00      14/623         std::__detail::_Map_base<int, std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > >, std::allocator<std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [144]
                0.00    0.00      14/383         std::__detail::_Map_base<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](llvm::Instruction*&&) [148]
                0.00    0.00      14/14          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::check_if_context_already_exists(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&) [169]
                0.00    0.00      14/14          std::__detail::_Map_base<std::pair<int, llvm::Instruction*>, std::pair<std::pair<int, llvm::Instruction*> const, int>, std::allocator<std::pair<std::pair<int, llvm::Instruction*> const, int> >, std::__detail::_Select1st, std::equal_to<std::pair<int, llvm::Instruction*> >, HashFunction, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::pair<int, llvm::Instruction*> const&) [170]
                0.00    0.00      14/14          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::NormalFlowFunctionForward(std::pair<int, llvm::BasicBlock*>) [168]
                0.00    0.00       9/28          void std::deque<std::pair<int, llvm::BasicBlock*>, std::allocator<std::pair<int, llvm::BasicBlock*> > >::emplace_back<std::pair<int, llvm::BasicBlock*> >(std::pair<int, llvm::BasicBlock*>&&) [165]
                0.00    0.00       6/11          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardOutflowForThisContext(int, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [172]
                0.00    0.00       5/10          Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getForwardInflowForThisContext(int) [174]
                0.00    0.00       4/5           Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::INIT_CONTEXT(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, llvm::CallInst*) [181]
-----------------------------------------------
                0.00    0.00       5/5           Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::INIT_CONTEXT(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, llvm::CallInst*) [181]
[183]    0.0    0.00    0.00       5         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardInflowForThisContext(int, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [183]
                0.00    0.00       5/102         std::__detail::_Map_base<int, std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*>, std::allocator<std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [158]
                0.00    0.00       5/417         void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1} const&) [146]
                0.00    0.00       5/821         std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [142]
                0.00    0.00       5/385         void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign_elements<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2} const&) [147]
-----------------------------------------------
                0.00    0.00       1/5           Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::performSplittingBB(llvm::Function&) [190]
                0.00    0.00       4/5           llvm::iterator_range<llvm::ipo_iterator<llvm::BasicBlock*, std::set<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef, std::less<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef>, std::allocator<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef> >, false> > llvm::inverse_post_order<llvm::BasicBlock*>(llvm::BasicBlock* const&) [189]
[184]    0.0    0.00    0.00       5         std::pair<std::_Rb_tree_iterator<llvm::BasicBlock*>, bool> std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_M_insert_unique<llvm::BasicBlock* const&>(llvm::BasicBlock* const&) [184]
-----------------------------------------------
                0.00    0.00       4/4           llvm::iterator_range<llvm::ipo_iterator<llvm::BasicBlock*, std::set<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef, std::less<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef>, std::allocator<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef> >, false> > llvm::inverse_post_order<llvm::BasicBlock*>(llvm::BasicBlock* const&) [189]
[185]    0.0    0.00    0.00       4         llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::PredIterator<llvm::BasicBlock, llvm::Value::user_iterator_impl<llvm::User> > > >::operator=(llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::PredIterator<llvm::BasicBlock, llvm::Value::user_iterator_impl<llvm::User> > > >&&) [185]
-----------------------------------------------
                0.00    0.00       2/4           llvm::iterator_range<llvm::ipo_iterator<llvm::BasicBlock*, std::set<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef, std::less<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef>, std::allocator<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef> >, false> > llvm::inverse_post_order<llvm::BasicBlock*>(llvm::BasicBlock* const&) [189]
                0.00    0.00       2/4           Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::performSplittingBB(llvm::Function&) [190]
[186]    0.0    0.00    0.00       4         llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::PredIterator<llvm::BasicBlock, llvm::Value::user_iterator_impl<llvm::User> > > >::operator=(llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::PredIterator<llvm::BasicBlock, llvm::Value::user_iterator_impl<llvm::User> > > > const&) [186]
-----------------------------------------------
                                   2             std::_Rb_tree_node<llvm::BasicBlock*>* std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_M_copy<std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_Alloc_node>(std::_Rb_tree_node<llvm::BasicBlock*> const*, std::_Rb_tree_node_base*, std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_Alloc_node&) [187]
                0.00    0.00       2/4           llvm::iterator_range<llvm::ipo_iterator<llvm::BasicBlock*, std::set<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef, std::less<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef>, std::allocator<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef> >, false> > llvm::inverse_post_order<llvm::BasicBlock*>(llvm::BasicBlock* const&) [189]
                0.00    0.00       2/4           Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::performSplittingBB(llvm::Function&) [190]
[187]    0.0    0.00    0.00       4+2       std::_Rb_tree_node<llvm::BasicBlock*>* std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_M_copy<std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_Alloc_node>(std::_Rb_tree_node<llvm::BasicBlock*> const*, std::_Rb_tree_node_base*, std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_Alloc_node&) [187]
                                   2             std::_Rb_tree_node<llvm::BasicBlock*>* std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_M_copy<std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_Alloc_node>(std::_Rb_tree_node<llvm::BasicBlock*> const*, std::_Rb_tree_node_base*, std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_Alloc_node&) [187]
-----------------------------------------------
                0.00    0.00       4/4           Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::INIT_CONTEXT(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, llvm::CallInst*) [181]
[188]    0.0    0.00    0.00       4         std::__detail::_Map_base<llvm::CallInst*, std::pair<llvm::CallInst* const, int>, std::allocator<std::pair<llvm::CallInst* const, int> >, std::__detail::_Select1st, std::equal_to<llvm::CallInst*>, std::hash<llvm::CallInst*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](llvm::CallInst* const&) [188]
                0.00    0.00       1/1           std::_Hashtable<llvm::CallInst*, std::pair<llvm::CallInst* const, int>, std::allocator<std::pair<llvm::CallInst* const, int> >, std::__detail::_Select1st, std::equal_to<llvm::CallInst*>, std::hash<llvm::CallInst*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [198]
-----------------------------------------------
                0.00    0.00       2/2           Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::performSplittingBB(llvm::Function&) [190]
[189]    0.0    0.00    0.00       2         llvm::iterator_range<llvm::ipo_iterator<llvm::BasicBlock*, std::set<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef, std::less<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef>, std::allocator<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef> >, false> > llvm::inverse_post_order<llvm::BasicBlock*>(llvm::BasicBlock* const&) [189]
                0.00    0.00      12/20          std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_M_erase(std::_Rb_tree_node<llvm::BasicBlock*>*) [166]
                0.00    0.00       4/5           std::pair<std::_Rb_tree_iterator<llvm::BasicBlock*>, bool> std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_M_insert_unique<llvm::BasicBlock* const&>(llvm::BasicBlock* const&) [184]
                0.00    0.00       4/4           llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::PredIterator<llvm::BasicBlock, llvm::Value::user_iterator_impl<llvm::User> > > >::operator=(llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::PredIterator<llvm::BasicBlock, llvm::Value::user_iterator_impl<llvm::User> > > >&&) [185]
                0.00    0.00       2/4           std::_Rb_tree_node<llvm::BasicBlock*>* std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_M_copy<std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_Alloc_node>(std::_Rb_tree_node<llvm::BasicBlock*> const*, std::_Rb_tree_node_base*, std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_Alloc_node&) [187]
                0.00    0.00       2/4           llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::PredIterator<llvm::BasicBlock, llvm::Value::user_iterator_impl<llvm::User> > > >::operator=(llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::PredIterator<llvm::BasicBlock, llvm::Value::user_iterator_impl<llvm::User> > > > const&) [186]
-----------------------------------------------
                0.00    0.00       2/2           Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysis(llvm::Module&) [8925]
[190]    0.0    0.00    0.00       2         Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::performSplittingBB(llvm::Function&) [190]
                0.00    0.00       8/20          std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_M_erase(std::_Rb_tree_node<llvm::BasicBlock*>*) [166]
                0.00    0.00       6/6           std::_Rb_tree_iterator<std::pair<llvm::Instruction* const, bool> > std::_Rb_tree<llvm::Instruction*, std::pair<llvm::Instruction* const, bool>, std::_Select1st<std::pair<llvm::Instruction* const, bool> >, std::less<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<llvm::Instruction* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<llvm::Instruction* const, bool> >, std::piecewise_construct_t const&, std::tuple<llvm::Instruction* const&>&&, std::tuple<>&&) [176]
                0.00    0.00       3/684         llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > llvm::function_ref<llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (llvm::StringRef)>::callback_fn<llvm::{lambda(llvm::StringRef)#5}>(long, llvm::StringRef) [143]
                0.00    0.00       2/2           llvm::iterator_range<llvm::ipo_iterator<llvm::BasicBlock*, std::set<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef, std::less<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef>, std::allocator<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef> >, false> > llvm::inverse_post_order<llvm::BasicBlock*>(llvm::BasicBlock* const&) [189]
                0.00    0.00       2/4           std::_Rb_tree_node<llvm::BasicBlock*>* std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_M_copy<std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_Alloc_node>(std::_Rb_tree_node<llvm::BasicBlock*> const*, std::_Rb_tree_node_base*, std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_Alloc_node&) [187]
                0.00    0.00       2/2           std::_Rb_tree<llvm::Instruction*, std::pair<llvm::Instruction* const, bool>, std::_Select1st<std::pair<llvm::Instruction* const, bool> >, std::less<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, bool> > >::_M_erase(std::_Rb_tree_node<std::pair<llvm::Instruction* const, bool> >*) [195]
                0.00    0.00       2/4           llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::PredIterator<llvm::BasicBlock, llvm::Value::user_iterator_impl<llvm::User> > > >::operator=(llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::PredIterator<llvm::BasicBlock, llvm::Value::user_iterator_impl<llvm::User> > > > const&) [186]
                0.00    0.00       1/5           std::pair<std::_Rb_tree_iterator<llvm::BasicBlock*>, bool> std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_M_insert_unique<llvm::BasicBlock* const&>(llvm::BasicBlock* const&) [184]
-----------------------------------------------
                0.00    0.00       2/2           Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::~Analysis() [8941]
[191]    0.0    0.00    0.00       2         std::_Hashtable<std::pair<int, llvm::BasicBlock*>, std::pair<int, llvm::BasicBlock*>, std::allocator<std::pair<int, llvm::BasicBlock*> >, std::__detail::_Identity, std::equal_to<std::pair<int, llvm::BasicBlock*> >, HashFunction, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable() [191]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Map_base<int, std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > >, std::allocator<std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [144]
[192]    0.0    0.00    0.00       2         std::_Hashtable<int, std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > >, std::allocator<std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [192]
                0.00    0.00       2/684         llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > llvm::function_ref<llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (llvm::StringRef)>::callback_fn<llvm::{lambda(llvm::StringRef)#5}>(long, llvm::StringRef) [143]
-----------------------------------------------
                0.00    0.00       2/2           Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::~Analysis() [8941]
[193]    0.0    0.00    0.00       2         std::_Deque_base<std::pair<int, llvm::BasicBlock*>, std::allocator<std::pair<int, llvm::BasicBlock*> > >::~_Deque_base() [193]
-----------------------------------------------
                0.00    0.00       2/2           std::_Rb_tree_iterator<std::pair<llvm::Instruction* const, bool> > std::_Rb_tree<llvm::Instruction*, std::pair<llvm::Instruction* const, bool>, std::_Select1st<std::pair<llvm::Instruction* const, bool> >, std::less<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<llvm::Instruction* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<llvm::Instruction* const, bool> >, std::piecewise_construct_t const&, std::tuple<llvm::Instruction* const&>&&, std::tuple<>&&) [176]
[194]    0.0    0.00    0.00       2         std::_Rb_tree<llvm::Instruction*, std::pair<llvm::Instruction* const, bool>, std::_Select1st<std::pair<llvm::Instruction* const, bool> >, std::less<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, bool> > >::_M_get_insert_unique_pos(llvm::Instruction* const&) [194]
-----------------------------------------------
                                   6             std::_Rb_tree<llvm::Instruction*, std::pair<llvm::Instruction* const, bool>, std::_Select1st<std::pair<llvm::Instruction* const, bool> >, std::less<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, bool> > >::_M_erase(std::_Rb_tree_node<std::pair<llvm::Instruction* const, bool> >*) [195]
                0.00    0.00       2/2           Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::performSplittingBB(llvm::Function&) [190]
[195]    0.0    0.00    0.00       2+6       std::_Rb_tree<llvm::Instruction*, std::pair<llvm::Instruction* const, bool>, std::_Select1st<std::pair<llvm::Instruction* const, bool> >, std::less<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, bool> > >::_M_erase(std::_Rb_tree_node<std::pair<llvm::Instruction* const, bool> >*) [195]
                                   6             std::_Rb_tree<llvm::Instruction*, std::pair<llvm::Instruction* const, bool>, std::_Select1st<std::pair<llvm::Instruction* const, bool> >, std::less<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, bool> > >::_M_erase(std::_Rb_tree_node<std::pair<llvm::Instruction* const, bool> >*) [195]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [12167]
[196]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z17process_mem_usageRfS_ [196]
-----------------------------------------------
                0.00    0.00       1/1           Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::~Analysis() [8941]
[197]    0.0    0.00    0.00       1         printMemory(float) [197]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Map_base<llvm::CallInst*, std::pair<llvm::CallInst* const, int>, std::allocator<std::pair<llvm::CallInst* const, int> >, std::__detail::_Select1st, std::equal_to<llvm::CallInst*>, std::hash<llvm::CallInst*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](llvm::CallInst* const&) [188]
[198]    0.0    0.00    0.00       1         std::_Hashtable<llvm::CallInst*, std::pair<llvm::CallInst* const, int>, std::allocator<std::pair<llvm::CallInst* const, int> >, std::__detail::_Select1st, std::equal_to<llvm::CallInst*>, std::hash<llvm::CallInst*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [198]
                0.00    0.00       1/684         llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > llvm::function_ref<llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (llvm::StringRef)>::callback_fn<llvm::{lambda(llvm::StringRef)#5}>(long, llvm::StringRef) [143]
-----------------------------------------------
                0.00    0.00       1/1           Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::INIT_CONTEXT(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, llvm::CallInst*) [181]
[199]    0.0    0.00    0.00       1         std::_Hashtable<std::pair<int, llvm::BasicBlock*>, std::pair<int, llvm::BasicBlock*>, std::allocator<std::pair<int, llvm::BasicBlock*> >, std::__detail::_Identity, std::equal_to<std::pair<int, llvm::BasicBlock*> >, HashFunction, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) [199]
                0.00    0.00       1/684         llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > llvm::function_ref<llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (llvm::StringRef)>::callback_fn<llvm::{lambda(llvm::StringRef)#5}>(long, llvm::StringRef) [143]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Map_base<std::pair<int, llvm::Instruction*>, std::pair<std::pair<int, llvm::Instruction*> const, int>, std::allocator<std::pair<std::pair<int, llvm::Instruction*> const, int> >, std::__detail::_Select1st, std::equal_to<std::pair<int, llvm::Instruction*> >, HashFunction, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::pair<int, llvm::Instruction*> const&) [170]
[200]    0.0    0.00    0.00       1         std::_Hashtable<std::pair<int, llvm::Instruction*>, std::pair<std::pair<int, llvm::Instruction*> const, int>, std::allocator<std::pair<std::pair<int, llvm::Instruction*> const, int> >, std::__detail::_Select1st, std::equal_to<std::pair<int, llvm::Instruction*> >, HashFunction, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash(unsigned long, unsigned long const&) [200]
                0.00    0.00       1/684         llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > llvm::function_ref<llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (llvm::StringRef)>::callback_fn<llvm::{lambda(llvm::StringRef)#5}>(long, llvm::StringRef) [143]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Map_base<int, std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*>, std::allocator<std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&) [158]
[201]    0.0    0.00    0.00       1         std::_Hashtable<int, std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*>, std::allocator<std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [201]
                0.00    0.00       1/684         llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > llvm::function_ref<llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (llvm::StringRef)>::callback_fn<llvm::{lambda(llvm::StringRef)#5}>(long, llvm::StringRef) [143]
-----------------------------------------------
                0.00    0.00       1/1           Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::~Analysis() [8941]
[202]    0.0    0.00    0.00       1         std::_Hashtable<int, std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > >, std::allocator<std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [202]
                0.00    0.00      10/10          std::_Hashtable<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [175]
-----------------------------------------------
                0.00    0.00       1/1           Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::INIT_CONTEXT(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, llvm::CallInst*) [181]
[203]    0.0    0.00    0.00       1         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&) [203]
                0.00    0.00       1/684         llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > llvm::function_ref<llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (llvm::StringRef)>::callback_fn<llvm::{lambda(llvm::StringRef)#5}>(long, llvm::StringRef) [143]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [196] _GLOBAL__sub_I__Z17process_mem_usageRfS_ (Driver.cpp) [153] Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardComponentAtInOfThisInstruction(llvm::Instruction*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [200] std::_Hashtable<std::pair<int, llvm::Instruction*>, std::pair<std::pair<int, llvm::Instruction*> const, int>, std::allocator<std::pair<std::pair<int, llvm::Instruction*> const, int> >, std::__detail::_Select1st, std::equal_to<std::pair<int, llvm::Instruction*> >, HashFunction, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash(unsigned long, unsigned long const&)
 [197] printMemory(float)    [160] Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getForwardComponentAtOutOfThisInstruction(llvm::Instruction&) [201] std::_Hashtable<int, std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*>, std::allocator<std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&)
 [178] process_mem_usage(float&, float&) [154] Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardComponentAtOutOfThisInstruction(llvm::Instruction*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [192] std::_Hashtable<int, std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > >, std::allocator<std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&)
 [179] llvm::iterator_range<llvm::po_iterator<llvm::BasicBlock*, llvm::SmallPtrSet<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef, 8u>, false, llvm::GraphTraits<llvm::BasicBlock*> > > llvm::post_order<llvm::BasicBlock*>(llvm::BasicBlock* const&) [162] Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getIn(int, llvm::BasicBlock*) [202] std::_Hashtable<int, std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > >, std::allocator<std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable()
 [167] llvm::po_iterator<llvm::BasicBlock*, llvm::SmallPtrSet<llvm::BasicBlock*, 8u>, false, llvm::GraphTraits<llvm::BasicBlock*> >::traverseChild() (PostOrderIterator.h) [156] Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getOut(int, llvm::BasicBlock*) [203] std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&)
 [143] llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > llvm::function_ref<llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (llvm::StringRef)>::callback_fn<llvm::{lambda(llvm::StringRef)#5}>(long, llvm::StringRef) (STLExtras.h) [150] Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::printLine(int) [193] std::_Deque_base<std::pair<int, llvm::BasicBlock*>, std::allocator<std::pair<int, llvm::BasicBlock*> > >::~_Deque_base()
 [185] llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::PredIterator<llvm::BasicBlock, llvm::Value::user_iterator_impl<llvm::User> > > >::operator=(llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::PredIterator<llvm::BasicBlock, llvm::Value::user_iterator_impl<llvm::User> > > >&&) [151] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...) [165] void std::deque<std::pair<int, llvm::BasicBlock*>, std::allocator<std::pair<int, llvm::BasicBlock*> > >::emplace_back<std::pair<int, llvm::BasicBlock*> >(std::pair<int, llvm::BasicBlock*>&&)
 [186] llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::PredIterator<llvm::BasicBlock, llvm::Value::user_iterator_impl<llvm::User> > > >::operator=(llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::PredIterator<llvm::BasicBlock, llvm::Value::user_iterator_impl<llvm::User> > > > const&) [161] std::_Hashtable<std::pair<int, llvm::BasicBlock*>, std::pair<int, llvm::BasicBlock*>, std::allocator<std::pair<int, llvm::BasicBlock*> >, std::__detail::_Identity, std::equal_to<std::pair<int, llvm::BasicBlock*> >, HashFunction, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node(unsigned long, std::pair<int, llvm::BasicBlock*> const&, unsigned long) const [152] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
 [173] llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::SuccIterator<llvm::Instruction, llvm::BasicBlock> > >::operator=(llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::SuccIterator<llvm::Instruction, llvm::BasicBlock> > >&&) [157] std::_Hashtable<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, false>*, unsigned long) [184] std::pair<std::_Rb_tree_iterator<llvm::BasicBlock*>, bool> std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_M_insert_unique<llvm::BasicBlock* const&>(llvm::BasicBlock* const&)
 [180] llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::SuccIterator<llvm::Instruction, llvm::BasicBlock> > >::operator=(llvm::SmallVectorImpl<std::pair<llvm::BasicBlock*, llvm::SuccIterator<llvm::Instruction, llvm::BasicBlock> > > const&) [171] std::_Hashtable<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [187] std::_Rb_tree_node<llvm::BasicBlock*>* std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_M_copy<std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_Alloc_node>(std::_Rb_tree_node<llvm::BasicBlock*> const*, std::_Rb_tree_node_base*, std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_Alloc_node&)
 [189] llvm::iterator_range<llvm::ipo_iterator<llvm::BasicBlock*, std::set<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef, std::less<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef>, std::allocator<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef> >, false> > llvm::inverse_post_order<llvm::BasicBlock*>(llvm::BasicBlock* const&) [175] std::_Hashtable<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [166] std::_Rb_tree<llvm::BasicBlock*, llvm::BasicBlock*, std::_Identity<llvm::BasicBlock*>, std::less<llvm::BasicBlock*>, std::allocator<llvm::BasicBlock*> >::_M_erase(std::_Rb_tree_node<llvm::BasicBlock*>*)
 [181] Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::INIT_CONTEXT(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, llvm::CallInst*) [163] std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_move_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >&&, std::integral_constant<bool, true>) [176] std::_Rb_tree_iterator<std::pair<llvm::Instruction* const, bool> > std::_Rb_tree<llvm::Instruction*, std::pair<llvm::Instruction* const, bool>, std::_Select1st<std::pair<llvm::Instruction* const, bool> >, std::less<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<llvm::Instruction* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<llvm::Instruction* const, bool> >, std::piecewise_construct_t const&, std::tuple<llvm::Instruction* const&>&&, std::tuple<>&&)
 [159] Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardIn(int, llvm::BasicBlock*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [147] void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign_elements<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2} const&) [194] std::_Rb_tree<llvm::Instruction*, std::pair<llvm::Instruction* const, bool>, std::_Select1st<std::pair<llvm::Instruction* const, bool> >, std::less<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, bool> > >::_M_get_insert_unique_pos(llvm::Instruction* const&)
 [164] Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardOut(int, llvm::BasicBlock*, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [141] std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [177] std::_Rb_tree<llvm::Instruction*, std::pair<llvm::Instruction* const, bool>, std::_Select1st<std::pair<llvm::Instruction* const, bool> >, std::less<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, bool> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<llvm::Instruction* const, bool> >, llvm::Instruction* const&)
 [182] Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::doAnalysisForward() [145] void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign_elements<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2} const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false>*)#1}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::operator=(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_ReuseOrAllocNode<std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> > > const&, std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#2} const&) [195] std::_Rb_tree<llvm::Instruction*, std::pair<llvm::Instruction* const, bool>, std::_Select1st<std::pair<llvm::Instruction* const, bool> >, std::less<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, bool> > >::_M_erase(std::_Rb_tree_node<std::pair<llvm::Instruction* const, bool> >*)
 [190] Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::performSplittingBB(llvm::Function&) [146] void std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1}>(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> const*)#1} const&) [148] std::__detail::_Map_base<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](llvm::Instruction*&&)
 [168] Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::NormalFlowFunctionForward(std::pair<int, llvm::BasicBlock*>) [155] std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >&&, std::allocator<std::__detail::_Hash_node<std::pair<llvm::Value* const, DataFlowValue*>, false> >&&, std::integral_constant<bool, true>) [149] std::__detail::_Map_base<llvm::Instruction*, std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> >, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > >, std::__detail::_Select1st, std::equal_to<llvm::Instruction*>, std::hash<llvm::Instruction*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](llvm::Instruction* const&)
 [174] Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::getForwardInflowForThisContext(int) [142] std::_Hashtable<llvm::Value*, std::pair<llvm::Value* const, DataFlowValue*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> >, std::__detail::_Select1st, std::equal_to<llvm::Value*>, std::hash<llvm::Value*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [188] std::__detail::_Map_base<llvm::CallInst*, std::pair<llvm::CallInst* const, int>, std::allocator<std::pair<llvm::CallInst* const, int> >, std::__detail::_Select1st, std::equal_to<llvm::CallInst*>, std::hash<llvm::CallInst*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](llvm::CallInst* const&)
 [183] Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardInflowForThisContext(int, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [198] std::_Hashtable<llvm::CallInst*, std::pair<llvm::CallInst* const, int>, std::allocator<std::pair<llvm::CallInst* const, int> >, std::__detail::_Select1st, std::equal_to<llvm::CallInst*>, std::hash<llvm::CallInst*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [170] std::__detail::_Map_base<std::pair<int, llvm::Instruction*>, std::pair<std::pair<int, llvm::Instruction*> const, int>, std::allocator<std::pair<std::pair<int, llvm::Instruction*> const, int> >, std::__detail::_Select1st, std::equal_to<std::pair<int, llvm::Instruction*> >, HashFunction, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::pair<int, llvm::Instruction*> const&)
 [169] Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::check_if_context_already_exists(llvm::Function*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> const&) [199] std::_Hashtable<std::pair<int, llvm::BasicBlock*>, std::pair<int, llvm::BasicBlock*>, std::allocator<std::pair<int, llvm::BasicBlock*> >, std::__detail::_Identity, std::equal_to<std::pair<int, llvm::BasicBlock*> >, HashFunction, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) [158] std::__detail::_Map_base<int, std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*>, std::allocator<std::pair<int const, Context<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>*> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&)
 [172] Analysis<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>::setForwardOutflowForThisContext(int, std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > > const&) [191] std::_Hashtable<std::pair<int, llvm::BasicBlock*>, std::pair<int, llvm::BasicBlock*>, std::allocator<std::pair<int, llvm::BasicBlock*> >, std::__detail::_Identity, std::equal_to<std::pair<int, llvm::BasicBlock*> >, HashFunction, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable() [144] std::__detail::_Map_base<int, std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > >, std::allocator<std::pair<int const, std::unordered_map<llvm::Instruction*, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType>, std::hash<llvm::Instruction*>, std::equal_to<llvm::Instruction*>, std::allocator<std::pair<llvm::Instruction* const, std::pair<std::unordered_map<llvm::Value*, DataFlowValue*, std::hash<llvm::Value*>, std::equal_to<llvm::Value*>, std::allocator<std::pair<llvm::Value* const, DataFlowValue*> > >, NoAnalysisType> > > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&)
